#important functions
range(start,stop,step)
This function returns a list having elements from start to stop with step increment. start is included, stop is not included.

By default, start = 0 and step = 1, so you can use like below:
range(stop)-->It will return a list [0,1,2,...stop-1]
range(10,100)-->[10,11,12,...99]


#using for loops
#print first 10 whole numbers
for i in range(10):
  print(i)
  
#using while loops
i=0
while i<10:
  print(i)
  i+=1
  
#Booleans in python are True and False

#Brackets are optional in while and if statements' condition

#Just after while, you can have an else statement!!

#Functions
def functionName():
  #Function Body
  
  
  
#datetime (https://www.programiz.com/python-programming/datetime)
#To get current day and time both
from datetime import datetime
current_day_and_time = datetime.now() #This will only give you today's date,month and year along with hour,minute,second and microsecond



#To get current day only
current_day = datetime.now().day
current_year = datetime.now().year
current_month = datetime.now().month

#epoch Time(time from 1-1-1970 00:00:00:0)
    epochTime = datetime.now().timestamp()
    print(epochTime)
    
    
customDate = datetime(2020,8,8)
customDate = datetime(2020,8,8,19,49,59) #2020-08-08 19:49:59

#To get only current date,month and year
from datetime import date
currentDay = date.today()

#To create a custom time
from datetime import time
t1 = time(21,4,29,9229) #21:04:29:9229

#Using timedelta
    from datetime import timedelta
    delta1 = timedelta(weeks=4,days=5,seconds=4)
    delta2 = timedelta(days=2,milliseconds=49)
    delta3 = delta1-delta2
    print(delta3) #31 days, 0:00:03.951000
    
#Converting datetime into string
    current_day = datetime.now()
    day_string = current_day.strftime("%Y-%m-%d (time-->%H:%M:%S)")
    print("day_string-->",day_string) # day_string--> 2021-08-08 (time-->20:39:03)
    
#Converting string into datetime
    date_text = "8 August, 2021"
    date_object = datetime.strptime(date_text,"%d %B, %Y")
    print("date_object-->",date_object) # date_object--> 2021-08-08 00:00:00
    

        
        
# Python's math module

https://realpython.com/python-math-module/

#ceil and floor functions in math library
from math import ceil,floor,gcd
print(floor(3.9)) #3
print(ceil(3.9)) #4
print(gcd(4,94)) #2
print('The value of Log(625), base 5: ' + str(math.log(625, 5)))


#Numpy module
https://www.geeksforgeeks.org/python-numpy/
#Creating a numpy 1d/2d array from a list/tuple
import numpy as np
arr = np.array([1,2,3,4])
arr2 = np.array((1,2,3,4))
print(arr) #[1 2 3 4]
print(arr2)

arr3= np.array([[1,2,],[3,4],[5,6]])
print(arr3,type(arr3)) ''' [[1 2]
 [3 4]
 [5 6]] <class 'numpy.ndarray'>'''
 
 
 #accessing elements in 3d numpy array
arr3 = np.array([[[1, 2, 3], [4, 5, 6]]])
for i in range(2):
    for j in range(3):
        print(arr3[0,i,j],"\n")




